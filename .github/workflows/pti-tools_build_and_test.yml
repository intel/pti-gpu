name: pti-tools-build-and-test

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths-ignore:
      - sdk/**
      - .github/**
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - sdk/**
      - .github/**

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:

  pti-tools-build-and-test:
    name: Test PTI Tools ${{ matrix.os_id }} ${{ matrix.tags }}

    if: vars.PTI_RUN_TESTS == 1

    runs-on: ${{ fromJSON(matrix.tags) }}

    strategy:
      matrix:
        include:
          - container: ${{ vars.PTI_DOCKER_UBUNTU_22_4_ONEAPI_25_1_0 }}
            tags: '["self-hosted", "Linux", "pti", "PVC"]'
            os_id: "ubuntu-22.04.2025.1.0"
          - container: ${{ vars.PTI_DOCKER_UBUNTU_22_4_ONEAPI_25_1_0 }}
            tags: '["self-hosted", "Linux", "pti", "BMG"]'
            os_id: "ubuntu-22.04.2025.1.0"

    container: 
      image: ${{ matrix.container }}
      options: --device=/dev/dri --cap-add CAP_PERFMON

    steps:
      - name: Clean-up
        run:  rm -rf *

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build-unitrace
        working-directory: tools/unitrace
        run: |
          source /opt/intel/oneapi/setvars.sh
          mkdir build
          cd build
          cmake -DBUILD_WITH_MPI=0 -GNinja ..
          ninja

      - name: Test-unitrace
        working-directory: tools/unitrace/test
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./test_unitrace.py

      - name: Build-and-test-onetrace
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./tests/run.py -s onetrace

      # TODO: Fix tools on platforms later than PVC.
      - name: Build-and-test-oneprof
        if: contains(fromJSON(matrix.tags), 'PVC')
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./tests/run.py -s oneprof

      - name: Build-and-test-sysmon
        if: contains(fromJSON(matrix.tags), 'PVC')
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./tests/run.py -s sysmon

      - name: Build-and-test-cl_gpu_metrics
        if: contains(fromJSON(matrix.tags), 'PVC')
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./tests/run.py -s cl_gpu_metrics

      - name: Build-and-test-instcount
        if: contains(fromJSON(matrix.tags), 'PVC')
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./tests/run.py -s instcount

      - name: Build-and-test-ze_debug_info
        if: contains(fromJSON(matrix.tags), 'PVC')
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./tests/run.py -s ze_debug_info

      - name: Build-and-test-cl_debug_info
        if: contains(fromJSON(matrix.tags), 'PVC')
        run: |
          source /opt/intel/oneapi/setvars.sh
          python ./tests/run.py -s cl_debug_info

  pti-tools-build-and-test-windows:

    name: Test unitrace on Windows

    if: vars.PTI_RUN_TESTS == 1

    runs-on: [self-hosted, Windows, pti]

    defaults:
      run:
        shell: cmd

    steps:
      - name: Clean-up
        run: |
          del /S /Q /F *

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build-unitrace
        working-directory: tools/unitrace
        run: |
          @echo off
          call "C:\Program Files (x86)\Intel\oneAPI\setvars.bat"
          mkdir build
          cd build
          cmake -DBUILD_WITH_MPI=0 -GNinja ..
          ninja

      - name: Test-unitrace
        working-directory: tools/unitrace/test
        run: |
          @echo off
          call "C:\Program Files (x86)\Intel\oneAPI\setvars.bat"
          python ./test_unitrace.py
