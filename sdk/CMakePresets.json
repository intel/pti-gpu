{
  "version": 2,
  "configurePresets": [
    {
      "name": "linux-icpx-release",
      "displayName": "Linux Release x64 IntelLLVM Ninja Config",
      "description": "Linux Release x64 Config using Ninja generator and oneAPI compiler",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_toolchain.cmake",
        "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wformat -Werror -Wformat-security -Werror=format-security -fstack-protector-strong -D_FORTIFY_SOURCE=2",
        "CMAKE_C_FLAGS": "-Wall -Wextra -Wformat -Werror -Wformat-security -Werror=format-security -fstack-protector-strong -D_FORTIFY_SOURCE=2",
        "CMAKE_SHARED_LINKER_FLAGS": "-Wl,-z,relro,-z,now,-z,noexecstack",
        "CMAKE_EXE_LINKER_FLAGS": "-Wl,-z,relro,-z,now,-z,noexecstack"
      }
    },
    {
      "name": "linux-icpx-reldebuginfo",
      "displayName": "Linux Release x64 IntelLLVM Ninja Config",
      "description": "Linux Release x64 Config using Ninja generator and oneAPI compiler",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_toolchain.cmake",
        "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wformat -Werror -Wformat-security -Werror=format-security -g -fstack-protector-strong -D_FORTIFY_SOURCE=2",
        "CMAKE_C_FLAGS": "-Wall -Wextra -Wformat -Werror -Wformat-security -Werror=format-security -g -fstack-protector-strong -D_FORTIFY_SOURCE=2",
        "CMAKE_SHARED_LINKER_FLAGS": "-Wl,-z,relro,-z,now,-z,noexecstack",
        "CMAKE_EXE_LINKER_FLAGS": "-Wl,-z,relro,-z,now,-z,noexecstack"
      }
    },

    {
      "name": "linux-icpx-debug",
      "displayName": "Linux Debug x64 IntelLLVM Ninja Config",
      "description": "Linux Debug x64 Config using Ninja generator and oneAPI compiler",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_toolchain.cmake",
        "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wformat -Wformat-security -fno-omit-frame-pointer -fno-optimize-sibling-calls",
        "CMAKE_C_FLAGS": "-Wall -Wextra -Wformat -Wformat-security -fno-omit-frame-pointer -fno-optimize-sibling-calls",
        "PTI_ENABLE_LOGGING": "ON"
      }
    },
    {
      "name": "linux-icpx-make-release",
      "inherits": "linux-icpx-release",
      "displayName": "Linux Release x64 IntelLLVM Make Config",
      "description": "Linux Release x64 Config using Unix Makefiles generator and oneAPI compiler",
      "generator": "Unix Makefiles"
    },
    {
      "name": "linux-icpx-make-debug",
      "inherits": "linux-icpx-debug",
      "displayName": "Linux Debug x64 IntelLLVM Make Config",
      "description": "Linux Debug x64 Config using Unix Makefiles generator and oneAPI compiler",
      "generator": "Unix Makefiles"
    },
    {
      "name": "linux-oneAPI-release",
      "inherits": "linux-icpx-release",
      "displayName": "Linux oneAPI x64 Release Config",
      "description": "Latest known valid configuration for releasing PTI with oneAPI toolkit.",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_INSTALL_LIBDIR": "lib",
        "CMAKE_DISABLE_FIND_PACKAGE_spdlog": true,
        "PTI_PRESET_USED": "${presetName}"
      }
    },
    {
      "name": "linux-asan",
      "inherits": "linux-icpx-debug",
      "displayName": "Linux AddressSanitizer Config",
      "description": "Linux build configuration for testing PTI with AddressSanitizer.",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_asan_toolchain.cmake"
      },
      "environment": {
        "NEOReadDebugKeys": "1",
        "DisableDeepBind": "1",
        "PATH": "$penv{CMPLR_ROOT}/bin/compiler:$penv{PATH}",
        "ASAN_SYMBOLIZER_PATH": "$penv{CMPLR_ROOT}/bin/compiler/llvm-symbolizer",
        "LSAN_SYMBOLIZER_PATH": "$penv{CMPLR_ROOT}/bin/compiler/llvm-symbolizer",
        "ASAN_OPTIONS": "suppressions=${sourceDir}/test/suppressions/ASan.supp,detect_leaks=1,check_initialization_order=1,halt_on_error=1,use_sigaltstack=0",
        "LSAN_OPTIONS": "suppressions=${sourceDir}/test/suppressions/LSan.supp,use_unaligned=1",
        "UBSAN_OPTIONS": "suppressions=${sourceDir}/test/suppressions/UBSan.supp,print_stacktrace=1,halt_on_error=1",
        "TBB_ENABLE_SANITIZERS": "1"
      }
    },
    {
      "name": "linux-fuzz",
      "inherits": "linux-asan",
      "displayName": "Linux Fuzz Testing Config",
      "description": "Linux build configuration for fuzz testing with libFuzzer.",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "PTI_FUZZ": true,
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_fuzz_toolchain.cmake"
      }
    },
    {
      "name": "linux-tsan",
      "inherits": "linux-asan",
      "displayName": "Linux ThreadSanitizer Config",
      "description": "Linux build configuration for testing PTI with ThreadSanitizer.",
      "environment": {
        "ONEAPI_DEVICE_SELECTOR": "level_zero:gpu",
        "TSAN_OPTIONS": "suppressions=${sourceDir}/test/suppressions/TSan.supp external_symbolizer_path=$penv{CMPLR_ROOT}/bin/compiler/llvm-symbolizer exitcode=0"
      },
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_tsan_toolchain.cmake"
      }
    },
    {
      "name": "linux-clang-release",
      "inherits": "linux-icpx-release",
      "displayName": "Linux Release x64 Clang Config",
      "description": "Linux Release x64 Config using Ninja generator and clang compiler",
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/clang_toolchain.cmake"
      }
    },
    {
      "name": "linux-clang-debug",
      "inherits": "linux-icpx-debug",
      "displayName": "Linux Debug x64 Clang Config",
      "description": "Linux Debug x64 Config using Ninja generator and clang compiler",
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/clang_toolchain.cmake",
        "PTI_ENABLE_LOGGING": "ON"
      }
    },
    {
      "name": "windows-icx-debug",
      "displayName": "Windows Debug x64 IntelLLVM Config",
      "description": "Windows Debug x64 IntelLLVM Compiler Config. Uses icx and Ninja. Turns on logging.",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_toolchain.cmake",
        "CMAKE_CXX_FLAGS": "/W4 /MDd /EHcs /fp:precise -Qstd:c++17 /sdl /GS /Gy /DYNAMICBASE /guard:cf /RTCsu",
        "CMAKE_SHARED_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /guard:cf",
        "CMAKE_EXE_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /guard:cf",
        "PTI_ENABLE_LOGGING": "ON"
      }
    },
    {
      "name": "windows-icx-release",
      "displayName": "Windows Release x64 IntelLLVM Config",
      "description": "Windows Release x64 IntelLLVM Compiler Config. Uses icx and Ninja.",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_toolchain.cmake",
        "CMAKE_CXX_FLAGS": "/W4 /WX /MD /EHcs /fp:precise -Qstd:c++17 /sdl /GS /Gy /DYNAMICBASE /guard:cf",
        "CMAKE_SHARED_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /NXCOMPAT /guard:cf",
        "CMAKE_EXE_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /NXCOMPAT /guard:cf"
      }
    },
    {
      "name": "windows-ci-release",
      "displayName": "Windows CI Release Config",
      "description": "Windows CI Release Config. Uses icx and Ninja.",
      "inherits": "windows-icx-release",
      "binaryDir": "${sourceDir}/wbr",
      "cacheVariables": {
        "CMAKE_OBJECT_PATH_MAX": "4096",
        "LevelZero_ROOT": "${sourceDir}/level-zero-sdk"
      }
    },
    {
      "name": "windows-oneAPI-release",
      "displayName": "Windows oneAPI Release Config",
      "description": "Latest known valid configuration for releasing PTI with oneAPI toolkit.",
      "inherits": "windows-ci-release",
      "cacheVariables": {
        "CMAKE_INSTALL_LIBDIR": "lib",
        "CMAKE_DISABLE_FIND_PACKAGE_spdlog": true,
        "PTI_PRESET_USED": "${presetName}"
      }
    },
    {
      "name": "windows-ci-debug",
      "displayName": "Windows CI Debug Config",
      "description": "Windows CI Debug Config. Uses icx and Ninja.",
      "inherits": "windows-icx-debug",
      "binaryDir": "${sourceDir}/wbd",
      "cacheVariables": {
        "CMAKE_OBJECT_PATH_MAX": "4096",
        "LevelZero_ROOT": "${sourceDir}/level-zero-sdk"
      }
    },
    {
      "name": "windows-debug",
      "displayName": "Windows Debug x64 MSVC Config",
      "description": "Windows Debug x64 MSVC Compiler Config. Uses cl and Ninja. Turns on logging.",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_C_COMPILER": "cl.exe",
        "CMAKE_CXX_COMPILER": "cl.exe",
        "CMAKE_CXX_FLAGS": "/MP /W4 /MDd /EHcs /sdl /analyze /wd6326 /wd28020 /Gy /GS /DYNAMICBASE /guard:cf /RTCsu",
        "CMAKE_SHARED_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /guard:cf",
        "CMAKE_EXE_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /guard:cf",
        "PTI_ENABLE_LOGGING": "ON"
      }
    },
    {
      "name": "windows-release",
      "displayName": "Windows Release x64 MSVC Config",
      "description": "Windows Release x64 MSVC Compiler Config. Uses cl and Ninja. Turns on logging.",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_C_COMPILER": "cl.exe",
        "CMAKE_CXX_COMPILER": "cl.exe",
        "CMAKE_CXX_FLAGS": "/MP /W4 /WX /MD /EHcs /sdl /analyze /wd6326 /wd28020 /Gy /GS /DYNAMICBASE /guard:cf",
        "CMAKE_SHARED_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /NXCOMPAT /LTCG /sdl /guard:cf",
        "CMAKE_EXE_LINKER_FLAGS": "/DEPENDENTLOADFLAG:0x2000 /DYNAMICBASE /NXCOMPAT /LTCG /sdl /guard:cf"
      }
    }
  ],
  "buildPresets": [
  {
    "name": "linux-icpx-release",
    "configurePreset": "linux-icpx-release",
    "displayName": "Linux Release x64 IntelLLVM Ninja Build"
  },
  {
    "name": "linux-icpx-reldebuginfo",
    "configurePreset": "linux-icpx-reldebuginfo",
    "displayName": "Linux Release x64 IntelLLVM Ninja Build"
  },
  {
    "name": "linux-icpx-debug",
    "configurePreset": "linux-icpx-debug",
    "displayName": "Linux Debug x64 IntelLLVM Ninja Build"
  },
  {
    "name": "linux-icpx-make-release",
    "configurePreset": "linux-icpx-make-release",
    "displayName": "Linux Release x64 IntelLLVM Make Build"
  },
  {
    "name": "linux-icpx-make-debug",
    "configurePreset": "linux-icpx-make-debug",
    "displayName": "Linux Debug x64 IntelLLVM Make Build"
  },
  {
    "name": "linux-oneAPI-release",
    "configurePreset": "linux-oneAPI-release",
    "displayName": "Linux oneAPI x64 Release Build"
  },
  {
    "name": "linux-asan",
    "configurePreset": "linux-asan",
    "displayName": "Linux AddressSanitizer Build"
  },
  {
    "name": "linux-fuzz",
    "configurePreset": "linux-fuzz",
    "displayName": "Linux Fuzz Testing Build"
  },
  {
    "name": "linux-tsan",
    "configurePreset": "linux-tsan",
    "displayName": "Linux ThreadSanitizer Build"
  },
  {
    "name": "windows-debug",
    "displayName": "Windows Debug x64 MSVC Build",
    "configurePreset": "windows-debug"
  },
  {
    "name": "windows-release",
    "displayName": "Windows Release x64 MSVC Build",
    "configurePreset": "windows-release"
  },
  {
    "name": "windows-icx-debug",
    "displayName": "Windows Debug x64 IntelLLVM Build",
    "configurePreset": "windows-icx-debug"
  },
  {
    "name": "windows-icx-release",
    "displayName": "Windows Release x64 IntelLLVM Build",
    "configurePreset": "windows-icx-release"
  },
  {
    "name": "windows-ci-release",
    "displayName": "Windows CI Release Build",
    "configurePreset": "windows-ci-release"
  },
  {
    "name": "windows-oneAPI-release",
    "configurePreset": "windows-oneAPI-release",
    "displayName": "Windows oneAPI Release Build"
  },
  {
    "name": "windows-ci-debug",
    "displayName": "Windows CI Debug Build",
    "configurePreset": "windows-ci-debug"
  }
  ],
  "testPresets": [
  {
    "name": "linux-icpx-release",
    "configurePreset": "linux-icpx-release",
    "displayName": "Linux Release x64 IntelLLVM Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-icpx-reldebuginfo",
    "configurePreset": "linux-icpx-reldebuginfo",
    "displayName": "Linux Release x64 IntelLLVM Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-icpx-debug",
    "configurePreset": "linux-icpx-debug",
    "displayName": "Linux Debug x64 IntelLLVM Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-icpx-make-release",
    "configurePreset": "linux-icpx-make-release",
    "displayName": "Linux Release x64 IntelLLVM Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-icpx-make-debug",
    "configurePreset": "linux-icpx-make-debug",
    "displayName": "Linux Debug x64 IntelLLVM Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-oneAPI-release",
    "configurePreset": "linux-oneAPI-release",
    "displayName": "Linux oneAPI x64 Release Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-asan",
    "configurePreset": "linux-asan",
    "displayName": "Linux AddressSanitizer Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-fuzz",
    "configurePreset": "linux-fuzz",
    "displayName": "Linux Fuzz Testing",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "linux-tsan",
    "configurePreset": "linux-tsan",
    "displayName": "Linux ThreadSanitizer Tests",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "windows-icx-debug",
    "displayName": "Windows Debug x64 IntelLLVM Test",
    "configurePreset": "windows-icx-debug"
  },
  {
    "name": "windows-icx-release",
    "displayName": "Windows Release x64 IntelLLVM Test",
    "configurePreset": "windows-icx-release"
  },
  {
    "name": "windows-oneAPI-release",
    "configurePreset": "windows-oneAPI-release",
    "displayName": "Windows oneAPI Release Test"
  },
  {
    "name": "windows-ci-release",
    "displayName": "Windows CI Release Test",
    "configurePreset": "windows-ci-release"
  },
  {
    "name": "windows-ci-debug",
    "displayName": "Windows CI Debug Test",
    "configurePreset": "windows-ci-debug"
  }
  ]
}
